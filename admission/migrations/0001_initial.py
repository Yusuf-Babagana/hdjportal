# Generated by Django 4.2.24 on 2025-09-27 07:52

import admission.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('passport_photo', models.ImageField(help_text='Upload passport photograph', upload_to=admission.models.upload_passport)),
                ('first_name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('other_name', models.CharField(blank=True, max_length=50)),
                ('date_of_birth', models.DateField()),
                ('phone', models.CharField(max_length=17)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.TextField()),
                ('lga', models.CharField(max_length=100, verbose_name='Local Government Area')),
                ('state_of_origin', models.CharField(max_length=50)),
                ('guardian_name', models.CharField(max_length=100)),
                ('guardian_phone', models.CharField(max_length=17)),
                ('guardian_address', models.TextField()),
                ('guardian_relationship', models.CharField(max_length=50)),
                ('first_choice', models.CharField(choices=[('diploma_community_health', 'Diploma in Community Health (SCHEW)'), ('certificate_community_health', 'Certificate in Community Health (JCHEW)'), ('diploma_health_info', 'Diploma in Health Information Management'), ('diploma_environmental_health', 'Diploma in Environmental Health'), ('diploma_xray', 'Diploma in X-Ray and Imaging'), ('diploma_nutrition', 'Diploma in Nutrition and Dietetics'), ('retraining_community_health', 'Retraining in Community Health (JCHEW holders)')], max_length=50)),
                ('second_choice', models.CharField(choices=[('diploma_community_health', 'Diploma in Community Health (SCHEW)'), ('certificate_community_health', 'Certificate in Community Health (JCHEW)'), ('diploma_health_info', 'Diploma in Health Information Management'), ('diploma_environmental_health', 'Diploma in Environmental Health'), ('diploma_xray', 'Diploma in X-Ray and Imaging'), ('diploma_nutrition', 'Diploma in Nutrition and Dietetics'), ('retraining_community_health', 'Retraining in Community Health (JCHEW holders)')], max_length=50)),
                ('declaration_text', models.TextField(help_text='Type your full name and declaration statement')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('incomplete', 'Incomplete')], default='pending', max_length=20)),
                ('is_submitted', models.BooleanField(default=False)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Application',
                'verbose_name_plural': 'Applications',
            },
        ),
        migrations.CreateModel(
            name='ReferralCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('used_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Referral Code',
                'verbose_name_plural': 'Referral Codes',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('has_paid', models.BooleanField(default=False)),
                ('can_apply', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('referral_code', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admission.referralcode')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
            },
        ),
        migrations.CreateModel(
            name='SchoolAttended',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_name', models.CharField(max_length=200)),
                ('from_year', models.CharField(max_length=4)),
                ('to_year', models.CharField(max_length=4)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schools_attended', to='admission.application')),
            ],
            options={
                'verbose_name': 'School Attended',
                'verbose_name_plural': 'Schools Attended',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=100, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('paystack_reference', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='admission.student')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
            },
        ),
        migrations.AddField(
            model_name='application',
            name='student',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admission.student'),
        ),
        migrations.CreateModel(
            name='UploadedDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('ssce_result', 'SSCE Results'), ('primary_cert', 'Primary School Certificate'), ('indigene_cert', 'Indigene Certificate'), ('birth_cert', 'Birth Certificate/Declaration of Age'), ('other_credentials', 'Other Credentials')], max_length=20)),
                ('document', models.FileField(upload_to=admission.models.upload_document)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='admission.application')),
            ],
            options={
                'verbose_name': 'Uploaded Document',
                'verbose_name_plural': 'Uploaded Documents',
                'unique_together': {('application', 'document_type')},
            },
        ),
        migrations.CreateModel(
            name='SSCEResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sitting_number', models.IntegerField(choices=[(1, 'First Sitting'), (2, 'Second Sitting')])),
                ('exam_type', models.CharField(choices=[('waec', 'WAEC'), ('neco', 'NECO'), ('nabteb', 'NABTEB'), ('nbais', 'NBAIS')], max_length=10)),
                ('exam_number', models.CharField(max_length=50)),
                ('registration_number', models.CharField(max_length=50)),
                ('centre_number', models.CharField(max_length=20)),
                ('centre_name', models.CharField(max_length=200)),
                ('year', models.CharField(max_length=4)),
                ('english_grade', models.CharField(choices=[('A1', 'A1'), ('B2', 'B2'), ('B3', 'B3'), ('C4', 'C4'), ('C5', 'C5'), ('C6', 'C6'), ('D7', 'D7'), ('E8', 'E8'), ('F9', 'F9'), ('awaiting', 'Awaiting Result')], max_length=10)),
                ('mathematics_grade', models.CharField(choices=[('A1', 'A1'), ('B2', 'B2'), ('B3', 'B3'), ('C4', 'C4'), ('C5', 'C5'), ('C6', 'C6'), ('D7', 'D7'), ('E8', 'E8'), ('F9', 'F9'), ('awaiting', 'Awaiting Result')], max_length=10)),
                ('biology_grade', models.CharField(choices=[('A1', 'A1'), ('B2', 'B2'), ('B3', 'B3'), ('C4', 'C4'), ('C5', 'C5'), ('C6', 'C6'), ('D7', 'D7'), ('E8', 'E8'), ('F9', 'F9'), ('awaiting', 'Awaiting Result')], max_length=10)),
                ('chemistry_grade', models.CharField(choices=[('A1', 'A1'), ('B2', 'B2'), ('B3', 'B3'), ('C4', 'C4'), ('C5', 'C5'), ('C6', 'C6'), ('D7', 'D7'), ('E8', 'E8'), ('F9', 'F9'), ('awaiting', 'Awaiting Result')], max_length=10)),
                ('physics_grade', models.CharField(choices=[('A1', 'A1'), ('B2', 'B2'), ('B3', 'B3'), ('C4', 'C4'), ('C5', 'C5'), ('C6', 'C6'), ('D7', 'D7'), ('E8', 'E8'), ('F9', 'F9'), ('awaiting', 'Awaiting Result')], max_length=10)),
                ('subject_1', models.CharField(max_length=50)),
                ('subject_1_grade', models.CharField(choices=[('A1', 'A1'), ('B2', 'B2'), ('B3', 'B3'), ('C4', 'C4'), ('C5', 'C5'), ('C6', 'C6'), ('D7', 'D7'), ('E8', 'E8'), ('F9', 'F9'), ('awaiting', 'Awaiting Result')], max_length=10)),
                ('subject_2', models.CharField(max_length=50)),
                ('subject_2_grade', models.CharField(choices=[('A1', 'A1'), ('B2', 'B2'), ('B3', 'B3'), ('C4', 'C4'), ('C5', 'C5'), ('C6', 'C6'), ('D7', 'D7'), ('E8', 'E8'), ('F9', 'F9'), ('awaiting', 'Awaiting Result')], max_length=10)),
                ('subject_3', models.CharField(max_length=50)),
                ('subject_3_grade', models.CharField(choices=[('A1', 'A1'), ('B2', 'B2'), ('B3', 'B3'), ('C4', 'C4'), ('C5', 'C5'), ('C6', 'C6'), ('D7', 'D7'), ('E8', 'E8'), ('F9', 'F9'), ('awaiting', 'Awaiting Result')], max_length=10)),
                ('subject_4', models.CharField(max_length=50)),
                ('subject_4_grade', models.CharField(choices=[('A1', 'A1'), ('B2', 'B2'), ('B3', 'B3'), ('C4', 'C4'), ('C5', 'C5'), ('C6', 'C6'), ('D7', 'D7'), ('E8', 'E8'), ('F9', 'F9'), ('awaiting', 'Awaiting Result')], max_length=10)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ssce_results', to='admission.application')),
            ],
            options={
                'verbose_name': 'SSCE Result',
                'verbose_name_plural': 'SSCE Results',
                'unique_together': {('application', 'sitting_number')},
            },
        ),
    ]
